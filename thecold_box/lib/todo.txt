import 'package:flutter/material.dart';
import 'package:thecold_box/database/db.dart';
import 'package:thecold_box/database/todo_item.dart';

class blankScreen extends StatefulWidget {
  const blankScreen({Key? key, required this.title}) : super(key: key);

  final String title;

  @override
  _blankScreenState createState() => _blankScreenState();
}

class _blankScreenState extends State<blankScreen> {
  List<ToDoItem> _todo = [];
  List<Widget> get _items => _todo.map((item) => format(item)).toList();
  late  String _name;

  Widget format(ToDoItem item) {
    return Padding(
      padding: EdgeInsets.fromLTRB(10, 5, 10, 5),
      child: Dismissible(
        key: Key(item.id.toString()),
        child: Container(
          padding: EdgeInsets.all(18),
          decoration: BoxDecoration(
            borderRadius: BorderRadius.circular(4),
            color: Theme.of(context).accentColor,
            shape: BoxShape.rectangle,
            boxShadow: <BoxShadow>[
              BoxShadow(
                  color: Colors.black12,
                  blurRadius: 10,
                  offset: Offset(0.0, 10))
            ],
          ),
          child: Row(
            children: <Widget>[
              Expanded(
                child: Text(
                  item.name,
                  style: TextStyle(color: Colors.white, fontSize: 16),
                ),
              ),
            ],
          ),
        ),
        onDismissed: (DismissDirection d) {
          DB.delete(ToDoItem.table, item);
          refresh();
        },
      ),
    );
  }

  void _create(BuildContext context) {
    showDialog(
        context: context,
        builder: (BuildContext context) {
          return AlertDialog(
            title: Text("Add Item"),
            content: Form(
              child: Column(
                mainAxisSize: MainAxisSize.min,
                children: <Widget>[
                  TextField(
                    autofocus: true,
                    decoration: InputDecoration(labelText: 'Item Name'),
                    onChanged: (name) {
                      {
                        _name = name;
                      }
                    },
                  )
                ],
              ),
            ),
            actions: <Widget>[
              FlatButton(onPressed: () => _save(), child: Text("Save"))
            ],
          );
        });
  }

  void _save() async {
    Navigator.of(context).pop();
    ToDoItem item = ToDoItem(name: _name);

    await DB.insert(ToDoItem.table, item);
    setState(() => _name = '');
    refresh();
  }

  void initState() {
    refresh();
    super.initState();
  }

  void refresh() async {
    List<Map<String, dynamic>> _results = await DB.query(ToDoItem.table);
    _todo = _results.map((item) => ToDoItem.fromMap(item)).toList();
    setState(() {});
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.blueGrey,
      body: Container(
        child: ListView(
          children: <Widget>[
            Padding(
              padding: EdgeInsets.fromLTRB(20, 20, 0, 10),
              child: Text(
                "The Cold Box",
                style: TextStyle(
                  color: Colors.white,
                  fontSize: 25,
                  fontWeight: FontWeight.bold,
                ),
              ),
            ),
            ListView(
              children: _items,
              shrinkWrap: true,
              physics: const NeverScrollableScrollPhysics(),
            )
          ],
        ),
      ),
      floatingActionButton: FloatingActionButton(
        backgroundColor: Colors.redAccent,
        onPressed: () => _create(context),
        child: Icon(
          Icons.add,
          color: Colors.white,
        ),
      ),
    );
  }
}
